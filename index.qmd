---
title: "New York Taxi 🚕"
subtitle: "Assignment 6"
author: "Anna Akhlamova"
format: 
  html: default
  docx: default
  typst: default
editor: visual
---

▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄<br> This report explores a subset of the NYC taxi dataset *2012 yellow* cars 🚖. The main questions are:<br>

-   How do average *fares* vary by *month and season* for different vendors?<br>
-   When are the *peak hours* and days of the week for taxi trips across seasons?<br>

We use a Parquet dataset covering multiple months and vendors.<br>

```{r}
#| label: setup
#| include: false

library(pacman)

p_load(
  arrow,
  duckplyr, warn.conflicts = FALSE,
  dplyr,
  tidyr,
  ggplot2,
  plotly,
  patchwork,
  lubridate
)
```

Reading Parquet dataset:

```{r}
#| code-fold: true
nyc <- read_parquet_duckdb("D:/Anna Akhlamova/Rsomedatasettaxi/nyc-taxi/**/*.parquet")
```

<br>I choose this type of reading because read_parquet_duckdb() leverages DuckDB’s query engine, which is often faster than Arrow’s read_parquet() when working with large datasets.

## Type of taxi service and how much people have used it

```{r}
#| code-fold: true
rate_code_count <- nyc |> 
  filter(!is.na(rate_code)) |> 
  count(rate_code) |> 
  arrange(desc(n))

rate_code_count
```

▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄<br>

## Difference in average *fares* by *month and season*

We focus on trips with valid vendor_name and compute monthly and seasonal summaries:<br>

Grouping necessary data<br>

```{r}
#| code-fold: true
monthly_summary <- nyc |>
  filter(!is.na(vendor_name)) |>
  summarise(
    avg_distance = mean(trip_distance, na.rm = TRUE),
    avg_fare     = mean(fare_amount, na.rm = TRUE),
    n_trips      = n(),
    .by = c(vendor_name, month)
  ) |>
  mutate(
    month_name = month.abb[month],
    season = case_when(
      month %in% c(12, 1, 2)  ~ "Winter",
      month %in% c(3, 4, 5)   ~ "Spring",
      month %in% c(6, 7, 8)   ~ "Summer",
      month %in% c(9, 10, 11) ~ "Autumn"
    )
  )

season_summary <- monthly_summary |>
  group_by(vendor_name, season) |>
  summarise(
    avg_distance = sum(avg_distance * n_trips) / sum(n_trips),
    avg_fare     = sum(avg_fare * n_trips) / sum(n_trips),
    total_trips  = sum(n_trips),
    .groups = "drop"
  )

```

Plotting it<br>

```{r}
#| code-fold: true

month_plot <- ggplot(monthly_summary,
                     aes(x = factor(month_name, levels = month.abb),
                         y = avg_fare, group = vendor_name, color = vendor_name)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  geom_text(aes(label = round(avg_fare, 2), 
              vjust = ifelse(vendor_name == "CMT", 1, -0.2)), size = 3)+
  labs(title = "Середня оплата по місяцях", x = "Місяць", y = "Середня оплата") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = 'none')

season_plot <- ggplot(season_summary,
                      aes(x = factor(season, levels = c("Winter", "Spring", "Summer", "Autumn")),
                          y = avg_fare, group = vendor_name, color = vendor_name)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  geom_text(aes(label = round(avg_fare, 2), 
              vjust = ifelse(vendor_name == "CMT", 0.1, -1)), size = 3)+
  labs(x = "Сезон", y = "Середня оплата") +
  theme_minimal()

combined_plot <- month_plot / season_plot +
  theme(legend.position = "bottom")

combined_plot
```

From visualization we can clearly see that the biggest price was during autumn ▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄▀▄▀▀▄▀▄<br>

## *peak hours* and most popular *days* of the week

Grouping necessary data<br>

```{r}
#| code-fold: true


nyc_peaks <- nyc |>
  select(pickup_datetime, month) |> 
  filter(!is.na(pickup_datetime), !is.na(month)) |> 
  collect() |>
  mutate(
    season = case_when(
      month %in% c(12, 1, 2)  ~ "Winter",
      month %in% c(3, 4, 5)   ~ "Spring",
      month %in% c(6, 7, 8)   ~ "Summer",
      month %in% c(9, 10, 11) ~ "Autumn"
    ),
    hour = hour(pickup_datetime),
    day_of_week = wday(pickup_datetime, label = TRUE)
  )

hourly_all <- nyc_peaks |>
  group_by(season, hour) |>
  summarise(n_trips = n(), .groups = "drop")

daily_all <- nyc_peaks |>
  group_by(season, day_of_week) |>
  summarise(n_trips = n(), .groups = "drop")

```

Plotting it<br>

```{r}
#| code-fold: true

hour_plot <- ggplot(hourly_all, aes(x = factor(hour), y = n_trips, fill = season)) +
  geom_col(position = "dodge") +
  labs(title = "Пікові години по сезонах", x = "Година", y = "Кількість поїздок") +
  theme_minimal() +
  scale_fill_manual(values = c("tan1", "palegreen", "khaki1", "lightblue1"))

day_plot <- ggplot(daily_all, aes(x = day_of_week, y = n_trips, fill = season)) +
  geom_col(position = "dodge") +
  labs(title = "Пікові дні тижня по сезонах", x = "День тижня", y = "Кількість поїздок") +
  theme_minimal() +
  scale_fill_manual(values = c("tan1", "palegreen", "khaki1", "lightblue1"))

peak_plot <- hour_plot / day_plot + plot_layout(guides = "collect") &
  theme(legend.position = "bottom")

peak_plot
```

The most popular season to use taxi is spring, especially at thursday.

